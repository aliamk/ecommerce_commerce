[{"C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\index.js":"1","C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\App.js":"2","C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\Products\\Products.jsx":"3","C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\Products\\Product\\Product.jsx":"4","C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\Products\\Product\\product.styles.jsx":"5","C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\NavBar\\NavBar.jsx":"6","C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\NavBar\\navbar.styles.jsx":"7","C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\index.js":"8","C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\Products\\products.styles.jsx":"9","C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\lib\\commerce.js":"10","C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\Cart\\Cart.jsx":"11","C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\Cart\\cart.styles.jsx":"12","C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\Cart\\CartItem\\CartItem.jsx":"13","C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\Cart\\CartItem\\cartItem.styles.jsx":"14","C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx":"15","C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\CheckoutForm\\Checkout\\checkout.styles.jsx":"16","C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\CheckoutForm\\AddressForm.jsx":"17","C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\CheckoutForm\\PaymentForm.jsx":"18","C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\CheckoutForm\\FormInput.jsx":"19","C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\CheckoutForm\\Review.jsx":"20"},{"size":149,"mtime":1607102846526,"results":"21","hashOfConfig":"22"},{"size":3749,"mtime":1607283578536,"results":"23","hashOfConfig":"22"},{"size":1206,"mtime":1607124791558,"results":"24","hashOfConfig":"22"},{"size":1513,"mtime":1607125837952,"results":"25","hashOfConfig":"22"},{"size":464,"mtime":1607104117265,"results":"26","hashOfConfig":"22"},{"size":1810,"mtime":1607283550445,"results":"27","hashOfConfig":"22"},{"size":1855,"mtime":1607105650920,"results":"28","hashOfConfig":"22"},{"size":225,"mtime":1607188156599,"results":"29","hashOfConfig":"22"},{"size":324,"mtime":1607105872510,"results":"30","hashOfConfig":"22"},{"size":176,"mtime":1607106551836,"results":"31","hashOfConfig":"22"},{"size":2214,"mtime":1607186271278,"results":"32","hashOfConfig":"22"},{"size":679,"mtime":1607130090958,"results":"33","hashOfConfig":"22"},{"size":1324,"mtime":1607182906105,"results":"34","hashOfConfig":"22"},{"size":389,"mtime":1607131199092,"results":"35","hashOfConfig":"22"},{"size":5039,"mtime":1607287246697,"results":"36","hashOfConfig":"22"},{"size":1382,"mtime":1607188121065,"results":"37","hashOfConfig":"22"},{"size":6744,"mtime":1607276774838,"results":"38","hashOfConfig":"22"},{"size":2830,"mtime":1607285822767,"results":"39","hashOfConfig":"22"},{"size":728,"mtime":1607285076037,"results":"40","hashOfConfig":"22"},{"size":1197,"mtime":1607285126122,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"abdroq",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\index.js",[],["84","85"],"C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\App.js",[],"C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\Products\\Products.jsx",[],"C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\Products\\Product\\Product.jsx",[],"C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\Products\\Product\\product.styles.jsx",[],"C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\NavBar\\NavBar.jsx",[],"C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\NavBar\\navbar.styles.jsx",[],"C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\index.js",[],"C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\Products\\products.styles.jsx",[],"C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\lib\\commerce.js",[],"C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\Cart\\Cart.jsx",[],"C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\Cart\\cart.styles.jsx",[],"C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\Cart\\CartItem\\CartItem.jsx",[],"C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\Cart\\CartItem\\cartItem.styles.jsx",[],"C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx",[],"C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\CheckoutForm\\Checkout\\checkout.styles.jsx",[],"C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\CheckoutForm\\AddressForm.jsx",["86","87"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core'\r\nimport { useForm, FormProvider } from 'react-hook-form'\r\n\r\nimport { commerce } from '../../lib/commerce'\r\n\r\nimport FormInput from './FormInput'\r\n\r\nconst AddressForm = ({ checkoutToken, next }) => {\r\n    // These hooks are needed to set the shipping options that correspond to the ones in Commerce.js' dashboard\r\n    // Each option depends on another: option => subdivision => country\r\n    const [shippingCountries, setShippingCountries] = useState([]);\r\n    const [shippingCountry, setShippingCountry] = useState('');\r\n    const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\r\n    const [shippingSubdivision, setShippingSubdivision] = useState('');\r\n    const [shippingOptions, setShippingOptions] = useState([]);\r\n    const [shippingOption, setShippingOption] = useState('');\r\n    // Hook from react-hook-form which is spread into FormProvider below\r\n    const methods = useForm()\r\n\r\n    // ==== CONVERT OBJECTS TO ARRAYS AND DESTRUCTURE REQUIRED ITEMS ==== //\r\n    // Modify the fetched countries object: Convert to a 2D array, map + destructure to get a normal array, return a new array containing an id and label\r\n    const countries = Object.entries(shippingCountries).map(([code, name]) => ({ id: code, label: name }))\r\n    const subdivisions = Object.entries(shippingSubdivisions).map(([code, name]) => ({ id: code, label: name }))\r\n    const options = shippingOptions.map((sO) => ({ id: sO.id, label: `${sO.description} - (${sO.price.formatted_with_symbol})` }))\r\n    // console.log(shippingOptions)\r\n\r\n    // ==== FETCH FUNCTIONS ==== //\r\n    // Fetch countries object from Commerce.js using the checkoutToken from Checkout.jsx\r\n    const fetchShippingCountries = async (checkoutTokenId) => {\r\n        // const response = await commerce.services.localeListShippingCountries(checkoutTokenId)\r\n        const { countries } = await commerce.services.localeListShippingCountries(checkoutTokenId)\r\n        // console.log(countries)\r\n        setShippingCountries(countries)\r\n        setShippingCountry(Object.keys(countries)[0])\r\n    }\r\n    //  Fetch all the subdivisions of the country that has been fetched for the shippingCountry\r\n    const fetchSubdivisions = async (countryCode) => {\r\n        // const response = await commerce.services.localeListSubdivisions(countryCode)\r\n        const { subdivisions } = await commerce.services.localeListSubdivisions(countryCode)\r\n        setShippingSubdivisions(subdivisions)\r\n        setShippingSubdivision(Object.keys(subdivisions)[0])\r\n    }\r\n    // Fetch shippingOptions\r\n    const fetchShippingOptions = async (checkoutTokenId, country, region = null) => {\r\n        const options = await commerce.checkout.getShippingOptions(checkoutTokenId, { country, region })\r\n        setShippingOptions(options)\r\n        setShippingOption(options[0].id)\r\n    }\r\n\r\n    // ==== USEEFFECT HOOKS ==== //\r\n    // Call the fetchShipping function for COUNTRIES from Commerce.js and pass in the token on app load\r\n    useEffect(() => {\r\n        fetchShippingCountries(checkoutToken.id)\r\n    }, [])\r\n    // If shippingCountry is present/changes, call the fetchSubdivision function for SUBDIVISIONS from Commerce.js\r\n    useEffect(() => {\r\n        if (shippingCountry) fetchSubdivisions(shippingCountry)\r\n    }, [shippingCountry])\r\n    // If shippingSubdivision is selected/changes, call the fetchShippingOptions function for OPTIONS and pass it the token, country and subdivision\r\n    useEffect(() => {\r\n        if (shippingSubdivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubdivision)\r\n    }, [shippingSubdivision])\r\n\r\n    return (\r\n        <>\r\n            <Typography variant=\"h6\" gutterBottom>Shipping Address</Typography>\r\n            <FormProvider {...methods}>\r\n                <form onSubmit={methods.handleSubmit((data) => next({ ...data, shippingCountry, shippingSubdivision, shippingOption }))}>\r\n                    <Grid container spacing={3}>\r\n                        <FormInput name='lastName' label='Last Name' />\r\n                        <FormInput name='address1' label='Address' />\r\n                        <FormInput name='email' label='Email' />\r\n                        <FormInput name='city' label='City' />\r\n                        <FormInput name='zipPostalCode' label='Zip/Postal Code' />\r\n                        <FormInput name='firstName' label='First Name' />\r\n\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping Country</InputLabel>\r\n                            <Select value={shippingCountry} fullWidth onChange={(e) => setShippingCountry(e.target.value)}>\r\n                                {countries.map((country) => (\r\n                                    <MenuItem key={country.id} value={country.id}>{country.label}</MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping Subdivision</InputLabel>\r\n                            <Select value={shippingSubdivision} fullWidth onChange={(e) => setShippingSubdivision(e.target.value)}>\r\n                                {subdivisions.map((subdivision) => (\r\n                                    <MenuItem key={subdivision.id} value={subdivision.id}>{subdivision.label}</MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping Options</InputLabel>\r\n                            <Select value={shippingOption} fullWidth onChange={(e) => setShippingOption(e.target.value)}>\r\n                                {options.map((option) => (\r\n                                    <MenuItem key={option.id} value={option.id}>{option.label}</MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <br />\r\n                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                        <Button component={Link} to=\"/cart\" variant=\"outlined\">Back to Cart</Button>\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\">Next</Button>\r\n                    </div>\r\n                </form>\r\n            </FormProvider>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddressForm\r\n\r\n\r\n// https://react-hook-form.com/ - using this for simplicity and because it performs fewer renders","C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\CheckoutForm\\PaymentForm.jsx",[],"C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\CheckoutForm\\FormInput.jsx",[],"C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\CheckoutForm\\Review.jsx",[],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":56,"column":8,"nodeType":"94","endLine":56,"endColumn":10,"suggestions":"95"},{"ruleId":"92","severity":1,"message":"96","line":64,"column":8,"nodeType":"94","endLine":64,"endColumn":29,"suggestions":"97"},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.","ArrayExpression",["100"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["101"],"no-global-assign","no-unsafe-negation",{"desc":"102","fix":"103"},{"desc":"104","fix":"105"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"106","text":"107"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubdivision]",{"range":"108","text":"109"},[3226,3228],"[checkoutToken.id]",[3753,3774],"[checkoutToken.id, shippingCountry, shippingSubdivision]"]