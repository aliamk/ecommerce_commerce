[{"C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\index.js":"1","C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\App.js":"2","C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\Products\\Products.jsx":"3","C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\Products\\Product\\Product.jsx":"4","C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\Products\\Product\\product.styles.jsx":"5","C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\NavBar\\NavBar.jsx":"6","C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\NavBar\\navbar.styles.jsx":"7","C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\index.js":"8","C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\Products\\products.styles.jsx":"9","C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\lib\\commerce.js":"10","C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\Cart\\Cart.jsx":"11","C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\Cart\\cart.styles.jsx":"12","C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\Cart\\CartItem\\CartItem.jsx":"13","C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\Cart\\CartItem\\cartItem.styles.jsx":"14","C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx":"15","C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\CheckoutForm\\Checkout\\checkout.styles.jsx":"16","C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\CheckoutForm\\AddressForm.jsx":"17","C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\CheckoutForm\\PaymentForm.jsx":"18","C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\CheckoutForm\\FormInput.jsx":"19","C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\CheckoutForm\\Review.jsx":"20"},{"size":149,"mtime":1607102846526,"results":"21","hashOfConfig":"22"},{"size":3746,"mtime":1607281026575,"results":"23","hashOfConfig":"22"},{"size":1206,"mtime":1607124791558,"results":"24","hashOfConfig":"22"},{"size":1513,"mtime":1607125837952,"results":"25","hashOfConfig":"22"},{"size":464,"mtime":1607104117265,"results":"26","hashOfConfig":"22"},{"size":1837,"mtime":1607177655342,"results":"27","hashOfConfig":"22"},{"size":1855,"mtime":1607105650920,"results":"28","hashOfConfig":"22"},{"size":225,"mtime":1607188156599,"results":"29","hashOfConfig":"22"},{"size":324,"mtime":1607105872510,"results":"30","hashOfConfig":"22"},{"size":176,"mtime":1607106551836,"results":"31","hashOfConfig":"22"},{"size":2214,"mtime":1607186271278,"results":"32","hashOfConfig":"22"},{"size":679,"mtime":1607130090958,"results":"33","hashOfConfig":"22"},{"size":1324,"mtime":1607182906105,"results":"34","hashOfConfig":"22"},{"size":389,"mtime":1607131199092,"results":"35","hashOfConfig":"22"},{"size":3384,"mtime":1607279540517,"results":"36","hashOfConfig":"22"},{"size":1382,"mtime":1607188121065,"results":"37","hashOfConfig":"22"},{"size":6744,"mtime":1607276774838,"results":"38","hashOfConfig":"22"},{"size":2804,"mtime":1607278714722,"results":"39","hashOfConfig":"22"},{"size":695,"mtime":1607212556736,"results":"40","hashOfConfig":"22"},{"size":1196,"mtime":1607277271453,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"abdroq",{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\index.js",[],["86","87"],"C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\App.js",["88","89"],"C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\Products\\Products.jsx",[],"C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\Products\\Product\\Product.jsx",[],"C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\Products\\Product\\product.styles.jsx",[],"C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\NavBar\\NavBar.jsx",["90","91","92"],"import React from 'react'\r\nimport { AppBar, Toolbar, IconButton, InputBase, Badge, MenuItem, Menu, Typography } from '@material-ui/core';\r\nimport logo from '../../assets/store.png'\r\n// import MenuIcon from '@material-ui/icons/Menu';\r\n// import SearchIcon from '@material-ui/icons/Search';\r\n// import AccountCircle from '@material-ui/icons/AccountCircle';\r\n// import MoreIcon from '@material-ui/icons/MoreVert';\r\n// import FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport { Link, useLocation } from 'react-router-dom'\r\n\r\nimport useStyles from './navbar.styles'\r\n\r\n\r\nconst NavBar = ({ totalItems }) => {\r\n\r\n    const classes = useStyles()\r\n    const location = useLocation()\r\n\r\n    return (\r\n        <>\r\n            <AppBar position=\"fixed\" className={classes.appBar} color=\"inherit\" >\r\n                <Toolbar>\r\n                    <Typography component={Link} to=\"/\" variant=\"h6\" className={classes.title} color=\"inherit\">\r\n                        <img src={logo} alt=\"Commerce.js\" height=\"25px\" className={classes.image} />\r\n                        Commerce.js\r\n                    </Typography>\r\n                    <div className={classes.grow} />\r\n                    {location.pathname === '/' && (\r\n                        <div className={classes.button}>\r\n                            <IconButton component={Link} to=\"/cart\" aria-label=\"Show Cart Items\" color=\"inherit\">\r\n                                <Badge badgeContent={totalItems} color=\"secondary\">\r\n                                    <ShoppingCartIcon />\r\n                                </Badge>\r\n                            </IconButton>\r\n                        </div>\r\n                    )}\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\NavBar\\navbar.styles.jsx",[],"C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\index.js",[],"C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\Products\\products.styles.jsx",[],"C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\lib\\commerce.js",[],"C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\Cart\\Cart.jsx",[],"C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\Cart\\cart.styles.jsx",[],"C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\Cart\\CartItem\\CartItem.jsx",[],"C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\Cart\\CartItem\\cartItem.styles.jsx",[],"C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx",["93","94","95"],"import React, { useState, useEffect } from 'react'\r\nimport { Paper, Stepper, Step, StepLabel, Typography, CircularProgress, Divider, Button } from '@material-ui/core'\r\n\r\nimport { commerce } from '../../../lib/commerce'\r\nimport useStyles from './checkout.styles'\r\nimport AddressForm from '../AddressForm'\r\nimport PaymentForm from '../PaymentForm'\r\n\r\n// For the Stepper, initialise it to show two scenarios: shipping address section or the payment details section\r\nconst steps = ['Shipping address', 'Payment details']\r\n\r\nconst Checkout = ({ cart, order, onCaptureCheckout, error }) => {\r\n    const classes = useStyles()\r\n    const [activeStep, setActiveStep] = useState(0)                 // For the stepper\r\n    const [checkoutToken, setCheckoutToken] = useState(null)       // Received from Commerce.js\r\n    const [shippingData, setShippingData] = useState({})           // data from AddressForm initially empty object\r\n\r\n    // Get tokens from commerce.js and set its state\r\n    useEffect(() => {\r\n        const generateToken = async () => {\r\n            try {\r\n                const token = await commerce.checkout.generateToken(cart.id, { type: 'cart' })\r\n                // console.log(token)\r\n                setCheckoutToken(token)\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        generateToken()\r\n    }, [cart])\r\n\r\n    // When the next function is called (button in AddressForm), update the stepper\r\n    const nextStep = () => setActiveStep((prevActiveStep) => prevActiveStep + 1)\r\n    // When the back function is called (button in AddressForm), update the stepper\r\n    const backStep = () => setActiveStep((prevActiveStep) => prevActiveStep - 1)\r\n\r\n    // Next Button in AddressForm.jsx: data from the form is set in state by this function and the stepper is updated\r\n    const next = (data) => {\r\n        setShippingData(data)\r\n        nextStep()\r\n    }\r\n\r\n    const Confirmation = () => (\r\n        <div>Confirmation</div>\r\n    )\r\n\r\n    // If activeStep's state is 0, display the AddressForm; if it's any other number, display the paymentForm\r\n    // Pass checkoutToken and Next and ShippingData as props to the AddressForm and PaymentForm\r\n    const Form = () => activeStep === 0\r\n        ? <AddressForm checkoutToken={checkoutToken} next={next} />\r\n        : <PaymentForm checkoutToken={checkoutToken} shippingData={shippingData} nextStep={nextStep} backStep={backStep} onCaptureCheckout={onCaptureCheckout} />\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.toolbar} />\r\n            <main className={classes.layout}>\r\n                <Paper className={classes.paper}>\r\n                    <Typography variant=\"h4\" align=\"center\">Checkout</Typography>\r\n                    <Stepper activeStep={activeStep} className={classes.stepper}>\r\n                        {steps.map((step) => (\r\n                            <Step key={step}>\r\n                                <StepLabel>{step}</StepLabel>\r\n                            </Step>\r\n                        ))}\r\n                    </Stepper>\r\n                    {/* If there are no more steps left, display confirmation; else display the default form */}\r\n                    {activeStep === steps.length ? <Confirmation /> : checkoutToken && <Form />}\r\n                </Paper>\r\n            </main>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Checkout\r\n","C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\CheckoutForm\\Checkout\\checkout.styles.jsx",[],"C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\CheckoutForm\\AddressForm.jsx",["96","97"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core'\r\nimport { useForm, FormProvider } from 'react-hook-form'\r\n\r\nimport { commerce } from '../../lib/commerce'\r\n\r\nimport FormInput from './FormInput'\r\n\r\nconst AddressForm = ({ checkoutToken, next }) => {\r\n    // These hooks are needed to set the shipping options that correspond to the ones in Commerce.js' dashboard\r\n    // Each option depends on another: option => subdivision => country\r\n    const [shippingCountries, setShippingCountries] = useState([]);\r\n    const [shippingCountry, setShippingCountry] = useState('');\r\n    const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\r\n    const [shippingSubdivision, setShippingSubdivision] = useState('');\r\n    const [shippingOptions, setShippingOptions] = useState([]);\r\n    const [shippingOption, setShippingOption] = useState('');\r\n    // Hook from react-hook-form which is spread into FormProvider below\r\n    const methods = useForm()\r\n\r\n    // ==== CONVERT OBJECTS TO ARRAYS AND DESTRUCTURE REQUIRED ITEMS ==== //\r\n    // Modify the fetched countries object: Convert to a 2D array, map + destructure to get a normal array, return a new array containing an id and label\r\n    const countries = Object.entries(shippingCountries).map(([code, name]) => ({ id: code, label: name }))\r\n    const subdivisions = Object.entries(shippingSubdivisions).map(([code, name]) => ({ id: code, label: name }))\r\n    const options = shippingOptions.map((sO) => ({ id: sO.id, label: `${sO.description} - (${sO.price.formatted_with_symbol})` }))\r\n    // console.log(shippingOptions)\r\n\r\n    // ==== FETCH FUNCTIONS ==== //\r\n    // Fetch countries object from Commerce.js using the checkoutToken from Checkout.jsx\r\n    const fetchShippingCountries = async (checkoutTokenId) => {\r\n        // const response = await commerce.services.localeListShippingCountries(checkoutTokenId)\r\n        const { countries } = await commerce.services.localeListShippingCountries(checkoutTokenId)\r\n        // console.log(countries)\r\n        setShippingCountries(countries)\r\n        setShippingCountry(Object.keys(countries)[0])\r\n    }\r\n    //  Fetch all the subdivisions of the country that has been fetched for the shippingCountry\r\n    const fetchSubdivisions = async (countryCode) => {\r\n        // const response = await commerce.services.localeListSubdivisions(countryCode)\r\n        const { subdivisions } = await commerce.services.localeListSubdivisions(countryCode)\r\n        setShippingSubdivisions(subdivisions)\r\n        setShippingSubdivision(Object.keys(subdivisions)[0])\r\n    }\r\n    // Fetch shippingOptions\r\n    const fetchShippingOptions = async (checkoutTokenId, country, region = null) => {\r\n        const options = await commerce.checkout.getShippingOptions(checkoutTokenId, { country, region })\r\n        setShippingOptions(options)\r\n        setShippingOption(options[0].id)\r\n    }\r\n\r\n    // ==== USEEFFECT HOOKS ==== //\r\n    // Call the fetchShipping function for COUNTRIES from Commerce.js and pass in the token on app load\r\n    useEffect(() => {\r\n        fetchShippingCountries(checkoutToken.id)\r\n    }, [])\r\n    // If shippingCountry is present/changes, call the fetchSubdivision function for SUBDIVISIONS from Commerce.js\r\n    useEffect(() => {\r\n        if (shippingCountry) fetchSubdivisions(shippingCountry)\r\n    }, [shippingCountry])\r\n    // If shippingSubdivision is selected/changes, call the fetchShippingOptions function for OPTIONS and pass it the token, country and subdivision\r\n    useEffect(() => {\r\n        if (shippingSubdivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubdivision)\r\n    }, [shippingSubdivision])\r\n\r\n    return (\r\n        <>\r\n            <Typography variant=\"h6\" gutterBottom>Shipping Address</Typography>\r\n            <FormProvider {...methods}>\r\n                <form onSubmit={methods.handleSubmit((data) => next({ ...data, shippingCountry, shippingSubdivision, shippingOption }))}>\r\n                    <Grid container spacing={3}>\r\n                        <FormInput name='lastName' label='Last Name' />\r\n                        <FormInput name='address1' label='Address' />\r\n                        <FormInput name='email' label='Email' />\r\n                        <FormInput name='city' label='City' />\r\n                        <FormInput name='zipPostalCode' label='Zip/Postal Code' />\r\n                        <FormInput name='firstName' label='First Name' />\r\n\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping Country</InputLabel>\r\n                            <Select value={shippingCountry} fullWidth onChange={(e) => setShippingCountry(e.target.value)}>\r\n                                {countries.map((country) => (\r\n                                    <MenuItem key={country.id} value={country.id}>{country.label}</MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping Subdivision</InputLabel>\r\n                            <Select value={shippingSubdivision} fullWidth onChange={(e) => setShippingSubdivision(e.target.value)}>\r\n                                {subdivisions.map((subdivision) => (\r\n                                    <MenuItem key={subdivision.id} value={subdivision.id}>{subdivision.label}</MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping Options</InputLabel>\r\n                            <Select value={shippingOption} fullWidth onChange={(e) => setShippingOption(e.target.value)}>\r\n                                {options.map((option) => (\r\n                                    <MenuItem key={option.id} value={option.id}>{option.label}</MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <br />\r\n                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                        <Button component={Link} to=\"/cart\" variant=\"outlined\">Back to Cart</Button>\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\">Next</Button>\r\n                    </div>\r\n                </form>\r\n            </FormProvider>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddressForm\r\n\r\n\r\n// https://react-hook-form.com/ - using this for simplicity and because it performs fewer renders","C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\CheckoutForm\\PaymentForm.jsx",[],"C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\CheckoutForm\\FormInput.jsx",[],"C:\\Users\\ALIA\\Documents\\Coding_Projects\\ecommerce_commerce\\src\\components\\CheckoutForm\\Review.jsx",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":7,"column":12,"nodeType":"104","messageId":"105","endLine":7,"endColumn":22},{"ruleId":"102","severity":1,"message":"106","line":7,"column":24,"nodeType":"104","messageId":"105","endLine":7,"endColumn":37},{"ruleId":"102","severity":1,"message":"107","line":2,"column":39,"nodeType":"104","messageId":"105","endLine":2,"endColumn":48},{"ruleId":"102","severity":1,"message":"108","line":2,"column":57,"nodeType":"104","messageId":"105","endLine":2,"endColumn":65},{"ruleId":"102","severity":1,"message":"109","line":2,"column":67,"nodeType":"104","messageId":"105","endLine":2,"endColumn":71},{"ruleId":"102","severity":1,"message":"110","line":2,"column":55,"nodeType":"104","messageId":"105","endLine":2,"endColumn":71},{"ruleId":"102","severity":1,"message":"111","line":2,"column":73,"nodeType":"104","messageId":"105","endLine":2,"endColumn":80},{"ruleId":"102","severity":1,"message":"112","line":2,"column":82,"nodeType":"104","messageId":"105","endLine":2,"endColumn":88},{"ruleId":"113","severity":1,"message":"114","line":56,"column":8,"nodeType":"115","endLine":56,"endColumn":10,"suggestions":"116"},{"ruleId":"113","severity":1,"message":"117","line":64,"column":8,"nodeType":"115","endLine":64,"endColumn":29,"suggestions":"118"},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"no-unused-vars","'mobileOpen' is assigned a value but never used.","Identifier","unusedVar","'setMobileOpen' is assigned a value but never used.","'InputBase' is defined but never used.","'MenuItem' is defined but never used.","'Menu' is defined but never used.","'CircularProgress' is defined but never used.","'Divider' is defined but never used.","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.","ArrayExpression",["121"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["122"],"no-global-assign","no-unsafe-negation",{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"127","text":"128"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubdivision]",{"range":"129","text":"130"},[3226,3228],"[checkoutToken.id]",[3753,3774],"[checkoutToken.id, shippingCountry, shippingSubdivision]"]